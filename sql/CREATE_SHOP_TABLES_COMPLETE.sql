-- ============================================
-- 상점 관련 테이블 전체 생성 SQL (Oracle)
-- Oracle Cloud ADB에서 실행
-- 테이블이 이미 있으면 오류가 발생할 수 있으므로
-- 먼저 verify_shop_tables_exist.sql로 확인하세요
-- ============================================

-- ============================================
-- 1. SHOP_ITEMS 테이블 (상품 마스터)
-- ============================================
CREATE TABLE SHOP_ITEMS (
    ID NUMBER PRIMARY KEY,
    ITEM_CODE VARCHAR2(50) NOT NULL UNIQUE,
    ITEM_TYPE VARCHAR2(20) NOT NULL,
    NAME VARCHAR2(100) NOT NULL,
    DESCRIPTION VARCHAR2(500),
    PRICE NUMBER NOT NULL,
    IMAGE_URL VARCHAR2(500),
    CATEGORY VARCHAR2(50),
    IS_ACTIVE NUMBER(1,0) DEFAULT 1 NOT NULL,
    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- ============================================
-- 2. USER_ITEMS 테이블 (사용자 보유 아이템)
-- ============================================
CREATE TABLE USER_ITEMS (
    ID NUMBER PRIMARY KEY,
    USER_ID NUMBER NOT NULL,
    SHOP_ITEM_ID NUMBER NOT NULL,
    QUANTITY NUMBER NOT NULL DEFAULT 1,
    IS_EQUIPPED NUMBER(1,0) DEFAULT 0,
    PURCHASED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT FK_USER_ITEMS_USER FOREIGN KEY (USER_ID) REFERENCES USERS(ID),
    CONSTRAINT FK_USER_ITEMS_SHOP_ITEM FOREIGN KEY (SHOP_ITEM_ID) REFERENCES SHOP_ITEMS(ID),
    CONSTRAINT UK_USER_ITEMS_USER_SHOP UNIQUE (USER_ID, SHOP_ITEM_ID)
);

-- ============================================
-- 3. BANNER_STICKERS 테이블 (배너에 부착된 스티커)
-- ============================================
CREATE TABLE BANNER_STICKERS (
    ID NUMBER PRIMARY KEY,
    USER_ID NUMBER NOT NULL,
    SHOP_ITEM_ID NUMBER NOT NULL,
    POSITION_X NUMBER NOT NULL,
    POSITION_Y NUMBER NOT NULL,
    WIDTH NUMBER NOT NULL,
    HEIGHT NUMBER NOT NULL,
    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT FK_BANNER_STICKERS_USER FOREIGN KEY (USER_ID) REFERENCES USERS(ID),
    CONSTRAINT FK_BANNER_STICKERS_SHOP_ITEM FOREIGN KEY (SHOP_ITEM_ID) REFERENCES SHOP_ITEMS(ID)
);

-- ============================================
-- 4. PURCHASE_HISTORY 테이블 (구매 내역)
-- ============================================
CREATE TABLE PURCHASE_HISTORY (
    ID NUMBER PRIMARY KEY,
    USER_ID NUMBER NOT NULL,
    SHOP_ITEM_ID NUMBER NOT NULL,
    QUANTITY NUMBER NOT NULL,
    PRICE_PAID NUMBER NOT NULL,
    TOKEN_BALANCE_BEFORE NUMBER NOT NULL,
    TOKEN_BALANCE_AFTER NUMBER NOT NULL,
    PURCHASED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT FK_PURCHASE_HISTORY_USER FOREIGN KEY (USER_ID) REFERENCES USERS(ID),
    CONSTRAINT FK_PURCHASE_HISTORY_SHOP_ITEM FOREIGN KEY (SHOP_ITEM_ID) REFERENCES SHOP_ITEMS(ID)
);

-- ============================================
-- 5. TOKEN_TRANSACTIONS 테이블 (토큰 거래 이력)
-- ============================================
CREATE TABLE TOKEN_TRANSACTIONS (
    ID NUMBER PRIMARY KEY,
    USER_ID NUMBER NOT NULL,
    AMOUNT NUMBER NOT NULL,
    BALANCE_BEFORE NUMBER NOT NULL,
    BALANCE_AFTER NUMBER NOT NULL,
    TRANSACTION_TYPE VARCHAR2(50),
    DESCRIPTION VARCHAR2(200),
    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT FK_TOKEN_TRANSACTIONS_USER FOREIGN KEY (USER_ID) REFERENCES USERS(ID)
);

-- ============================================
-- 시퀀스 생성
-- ============================================

CREATE SEQUENCE SHOP_ITEMS_SEQ START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE USER_ITEMS_SEQ START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE BANNER_STICKERS_SEQ START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE PURCHASE_HISTORY_SEQ START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE TOKEN_TRANSACTIONS_SEQ START WITH 1 INCREMENT BY 1;

-- ============================================
-- 인덱스 생성 (성능 최적화)
-- ============================================

CREATE INDEX IDX_USER_ITEMS_USER_ID ON USER_ITEMS(USER_ID);
CREATE INDEX IDX_USER_ITEMS_SHOP_ITEM_ID ON USER_ITEMS(SHOP_ITEM_ID);
CREATE INDEX IDX_BANNER_STICKERS_USER_ID ON BANNER_STICKERS(USER_ID);
CREATE INDEX IDX_PURCHASE_HISTORY_USER_ID ON PURCHASE_HISTORY(USER_ID);
CREATE INDEX IDX_TOKEN_TRANSACTIONS_USER_ID ON TOKEN_TRANSACTIONS(USER_ID);

-- ============================================
-- 확인 쿼리
-- ============================================

-- 테이블 생성 확인
SELECT 'Tables created successfully' AS STATUS FROM DUAL;

-- 테이블 목록 확인
SELECT TABLE_NAME 
FROM USER_TABLES 
WHERE TABLE_NAME IN (
    'SHOP_ITEMS', 'USER_ITEMS', 'BANNER_STICKERS', 
    'PURCHASE_HISTORY', 'TOKEN_TRANSACTIONS'
)
ORDER BY TABLE_NAME;

